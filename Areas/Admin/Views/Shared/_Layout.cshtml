@* cshtml , razorpage sayılıyor galiba *@
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="~/lib/bootstrap/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="~/lib/awesome/css/all.css" />
    @* bu uzantı olarak nereye kuruyorsak orayı yazıyoruz *@
</head>

<body>
    <header>
        <partial name="_Navbar" />

        @* partial bir tag yardımıyla çağırılıyor,
        ? layoutu parçalara bölüp birleştirmeye yarıyor gibi mesela navbarı başka yerde derliyoruz *@


        @RenderSection("Header",false)
        @* normal şartlarda burad bir şey olmayacak , bu htmle render edilmeyecek ; istenirse , header a bir şey
        eklemek gerektiğinde böyle bir alan tanımlanabilir*@
        <div class="container">
            <main role="main" class="pb-3">

                @* padding özelliği benzeri bir şey gibi düşün *@
                @RenderBody()
            </main>
        </div>
        <footer>
            Footer
            @RenderSection("Footer",false)

        </footer>
        <script src="~/lib/jquery/jquery.min.js"></script>
        <script src="~/lib/bootstrap/js/bootstrap.bundle.min.js"></script>
        <script src="~/js/site.js"></script>
        <script src="~/lib/awesome/js/all.min.js"></script>

        @await RenderSectionAsync("Scripts",required:false) <!-- RenderSection("Footer",false); ile benzer kullanılır-->
        @* Bu kod, "Scripts" bölümünü eğer mevcutsa render etmeye çalışır.
        Eğer "Scripts" bölümü mevcut değilse, kod çalışmaya devam eder.
        Bu genellikle sayfanın belirli betikleri veya kod parçalarını içermesi gereken
        bir bölümün render edilmesi amacıyla kullanılır.
        required derken parametrenin adını belirtmiş oluyoruz*@

</body>

</html>

@* eğer 2 controllerin etki edeceği bir sayfa varsa o shared klasörü altında eklenmesi daha doğru olur *@